* 书目
** TODO 《Practical Common Lisp》
   1. [X] Introduction: Why Lisp?
      korn-like motto: a programble programing language
   2. [X] Lather, Rinse, Repeat: A Tour of the REPL
   3. [ ] Practical: A Simple Database
     2 Using a global variable also has some drawbacks--for instance, 
     you can have only one database at a time. In Chapter 27, with more 
     of the language under your belt, you'll be ready to build a more 
     flexible database. You'll also see, in Chapter 6, how even using a 
     global variable is more flexible in Common Lisp than it may be in 
     other languages.
      - (list 1 2 3)
      - (getf (list :a 1 :b 2 :c 3) :a)

      创建一个 hash item.
      - (defun make-cd (title artist rating ripped)
	(list :title title :artist artist :rating rating :ripped ripped))
      把这个hash item 放到 *db* 中去
      (defvar *db* nil)
      (defun add-record (cd) (push cd *db*))
      (add-record (make-cd "Roses" "Kathy Mattea" 7 t))
      (add-record (make-cd "Fly" "Dixie Chicks" 8 t))
      (add-record (make-cd "Home" "Dixie Chicks" 9 t))
    
      dump *db*
      (defun dump-db ()
	  (dolist (cd *db*)
	  (format t "~{~a:~10t~a~%~}~%" cd)))
      (dump-db)
    
      - Improving the User Interaction

      (defun prompt-read (prompt)
	    (format *query-io* "~a: " prompt)
	    (force-output *query-io*)
	    (read-line *query-io*))
  
      - parse integer
      (defun parse-integer (prompt-read))
      (parse-integer (prompt-read "Rating"))
   4. [ ] Syntax and Semantics
   5. [ ] Functions
   6. [ ] Variables
   7. [ ] Macros: Standard Control Constructs
   8. [ ] Macros: Defining Your Own
   9. [ ] Practical: Building a Unit Test Framework
   10. [ ] Numbers, Characters, and Strings
   11. [ ] Collections
   12. [ ] They Called It LISP for a Reason: List Processing
   13. [ ] Beyond Lists: Other Uses for Cons Cells
   14. [ ] Files and File I/O
   15. [ ] Practical: A Portable Pathname Library
   16. [ ] Object Reorientation: Generic Functions
   17. [ ] Object Reorientation: Classes
   18. [ ] A Few FORMAT Recipes
   19. [ ] Beyond Exception Handling: Conditions and Restarts
   20. [ ] The Special Operators
   21. [ ] Programming in the Large: Packages and Symbols
   22. [ ] LOOP for Black Belts
   23. [ ] Practical: A Spam Filter
   24. [ ] Practical: Parsing Binary Files
   25. [ ] Practical: An ID3 Parser
   26. [ ] Practical: Web Programming with AllegroServe
   27. [ ] Practical: An MP3 Database
   28. [ ] Practical: A Shoutcast Server
   29. [ ] Practical: An MP3 Browser
   30. [ ] Practical: An HTML Generation Library, the Interpreter
   31. [ ] Practical: An HTML Generation Library, the Compiler
   32. [ ] Conclusion: What's Next?
** 《深入理解计算机系统》
   - chapter 1 计算机系统漫游 [0/10]
     - [ ] 信息就是位 + 上下文
     - [ ] 程序被其他程序翻译成不同的格式
     - [ ] 了解编译系统如何工作是大有益处的
     - [ ] 处理器读并解释存储在存储器中的指令
     - [ ] 高速缓存
     - [ ] 形成层次结构的存储设备
     - [ ] 操作系统管理硬件
     - [ ] 利用网络系统和其他系统通信
     - [ ] 下一步
     - [ ] 小结
   - chapter 2 信息的表示和处理 [0/5]
     - [ ] 信息存储
     - [ ] 整数表示
     - [ ] 整数运算
     - [ ] 浮点
     - [ ] 小结
   - chapter 3 程序的机器级表示 [0/16]
     - [ ] 历史观点 
     - [ ] 程序编码
     - [ ] 数据格式
     - [ ] 访问信息
     - [ ] 算数和逻辑操作
     - [ ] 控制
     - [ ] 过程
     - [ ] 数组分配和访问
     - [ ] 异类的数据结构
     - [ ] 对齐(alignment)
     - [ ] 综合: 理解指针
     - [ ] 现实生活: 使用GDB 调试器
     - [ ] 存储器的越界和缓冲区溢出
     - [ ] *浮点代码
     - [ ] *在C中嵌入汇编代码
     - [ ] 小结
   - chapter 4 处理器体系结构
     - [ ] Y86 指令集体系结构
     - [ ] 逻辑设计和硬件控制语言 HCL
     - [ ] Y86的顺序(sequential) 实现
     - [ ] 流水线的通用原理
     - [ ] Y86 的流水线实现
     - [ ] 小结
   - chapter 5 优化程序性能
     - [ ] 优化编译器的能力和局限性
     - [ ] 表示程序性能
     - [ ] 程序示例
     - [ ] 消除循环的的低效率
     - [ ] 减少过程调用
     - [ ] 消除不必要的存储器引用
     - [ ] 理解现代处理器
     - [ ] 降低循环开销
     - [ ] 转换到指针代码
     - [ ] 提高并行性
     - [ ] 综合： 优化合并 (Combing) 代码的效果小结
     - [ ] 理解存储器性能
     - [ ] 现实生活: 性能提高技术
     - [ ] 确认和消除性能瓶颈
     - [ ] 小结
   - chapter 6 存储器层次结构 [0/8]
     - [ ] 存储技术
     - [ ] 局限性
     - [ ] 存储器层次结构
     - [ ] 高数缓存存储器
     - [ ] 编写高速缓存友好的代码
     - [ ] 综合: 高速缓存对程序性能的影响
     - [ ] 综合: 利用程序中的局限性
     - [ ] 小结
   - chapter 7 链接 [0/14]
     - [ ] 编译器驱动程序
     - [ ] 静态链接
     - [ ] 目标文件
     - [ ] 可重定位目标文件
     - [ ] 符号和符号表
     - [ ] 符号解析
     - [ ] 重定位
     - [ ] 可执行目标文件
     - [ ] 加载可执行目标文件
     - [ ] 动态链接共享库
     - [ ] 从应用程序中加载和链接共享库
     - [ ] * 与位置无关的代码(PIC)
     - [ ] 处理目标文件的工具
     - [ ] 小结
   - chapter 8 异常控制流[0/8]
     - [ ] 异常
     - [ ] 进程
     - [ ] 系统调用和错误处理
     - [ ] 进程控制
     - [ ] 信号
     - [ ] 非本地跳转
     - [ ] 操作进程的工具
     - [ ] 小结
   - chapter 9 测量程序执行时间 [0/10]
     - [ ] 计算机系统上的时间流
     - [ ] 通过间隔计数 (interval counting) 来测量时间
     - [ ] 周期计数器
     - [ ] 用周期计数器来测量程序执行时间
     - [ ] 基于 gettimeofday 函数的测量
     - [ ] 综合: 一个实验协议
     - [ ] 展望未来
     - [ ] 现实生活: K次最优测量方法
     - [ ] 得到的经验教训
     - [ ] 小结
   - chapter 10 虚拟存储器 [0/13]
     - [ ] 物理和虚拟寻址
     - [ ] 地址空间
     - [ ] 虚拟存储器作为缓存的工具
     - [ ] 虚拟存储器作为存储器管理的工具
     - [ ] 虚拟存储器作为存储器保护的工具
     - [ ] 地址翻译
     - [ ] 案例研究: Pentium/Linux 存储器系统
     - [ ] 存储器映射
     - [ ] 动态存储器分配
     - [ ] 垃圾收集
     - [ ] C语言中常见的与存储器有关的错误
     - [ ] 额要重述一些有关虚拟存储器的关键任务
     - [ ] 小结
   - chapter 11 : 系统级 I/O [0/10]
     - [ ] Unix I/O
     - [ ] 打开和关闭文件
     - [ ] 读和写文件
     - [ ] 用Rio 包进行健壮的读和写
     - [ ] 读取文件元数据
     - [ ] 共享文件
     - [ ] I/O 重定向
     - [ ] 标准 I/O
     - [ ] 综合: 我该使用哪些 I/O 函数?
     - [ ] 小结
   - chapter 12 : 网络编程。 [0/6]
     - [ ] 客户端-服务器编程模型
     - [ ] 网络
     - [ ] 全球IP因特网
     - [ ] WEB 服务器
     - [ ] 综合: Tiny Web 服务器
     - [ ] 小结
   - chapter 13 : 并发编程. [2/7]
     - [X] 基于进程的并发编程
       为什么会考虑并发编程.
	多用户|访问慢设备|
     - [X] 基于 I/O 多路复用的并发编程
       fd_set 设置一个文件描述符的集合. 然后并且select 之.
       任何一个集合当中的文件描述符 ready 了之后就会通知并启动一个状态机
       进行处理.
     - [ ] 多线程程序中的共享变量
     - [ ] 用信号量同步线程
     - [ ] 综合： 基于预线程化的并发服务器
     - [ ] 其他并发问题
     - [ ] 小结
    
** 《C programming language》
** 《C++ programming language》
** 《编译原理极其实践》
   - 第一章 概论 [0/4]
     - [ ] 为什么要使用编译器
     - [ ] 与编译器相关的程序
     - [ ] 编译步骤
     - [ ] 编译器中主要的数据结构
     - [ ] 编译器结构中其他问题
     - [ ] 自举与移植
     - [ ] TINY 样本语言与编译器
   - 第二章 词法分析
     
** 《黑客与画家》
   - 第一章
** DONE 《旅行人生最有价值的投资》   - Jim Rogers
   :LOGBOOK:
   CLOCK: [2011-10-10 日 22:43]--[2011-10-23 日 22:43] => 312:00
   :END:
   - 第一篇 从顿琴到东京 [10/10]
     - [X] 飞向苏联
     - [X] 纽约
     - [X] 穿越欧洲
     - [X] 林茨
     - [X] 中欧
     - [X] 前往伊斯坦布尔
     - [X] 古老的土耳其斯坦
     - [X] 进入中国
     - [X] 西安
     - [X] 从西安到北京
   - 第二篇 从东京到顿琴 [8/8]
     - [X] 日本: 值得投资的国家
       俄罗斯和南非是产金的大国. 这两个国家经济已经开始发展，如果全球恢复金本位
       那是否意味着这两个国家会更加富有。
       作者关于金本位的质疑:
       1. 金本位对政客的约束可能会导致政客马上会将金本位作为替罪羊废除金本位
       2. 当经济发展的时候政客会对黄金参水. 

	  作者还提出关于金本位的解决办法..简单的取消硬通货的资本利得税. 具体原因
	  也搞不明柏为什么.
     - [X] 在世界的边缘
     - [X] 穿越蛮荒之地
     - [X] 西伯利亚
     - [X] 乌兰乌德，济马和坎斯克
     - [X] 新西伯利亚及其以西
     - [X] 莫斯科
     - [X] 前往爱尔兰
   - 第三篇 从顿琴到好望角 [8/8]
     - [X] 非洲： 征服撒哈啦
     - [X] 撒哈啦以南
     - [X] 顺河而下
     - [X] 愤怒的羔羊
     - [X] 逃亡
     - [X] 赞比亚和大津巴布韦
     - [X] 博次瓦纳
     - [X] 南非
   - 第四篇 绕过和恩角 [9/9]
     - [X] 澳大利亚的长途跋涉
     - [X] 世界尽头
     - [X] 布宜诺斯艾利斯
     - [X] 智力与复活节岛
     - [X] 走进印加
     - [X] 沿着达尔文的足迹
     - [X] 达里恩地带
     - [X] 巴拿马运河
     - [X] 回家

** 《次第花开》  - 希阿荣博堪步 著
   - 第一部 珍宝人生 [3/3]
     - [X] 珍宝人生
       关于无我的探讨. 不相信自己的大脑,其实只是一种gtd 方面西方人的客观描述
       在佛教当中不相信自己的大脑其实就是一种关于无我的态度的哲学. gtd 方面将
       一切都交给时间管理系统，让自己内心得到安静， 通过一种时间管理的方法来求解
       脱.能够让自己跳出来作为一种旁观者的态度来处理周遭的事情. 
       
       关于认识痛苦. 静静的观察痛苦.
       痛苦源于我执和法执.
       
       解.脱.
         解: 解开，分开，融化,调和，处理.
         脱: 离开， 取下，除去 等含义.
       字面上的含义就是解后脱离开的一个过程.  人生修行安乐的源泉.
     - [X] 安乐
     - [X] 从玉树说起
       为什么灾难如此频繁？ 为什么佛法兴盛之地也会发生灾难？
       佛法的加持力何在？为什么修持佛法还是不能避免无常？
   - 佛门 [0/5]
	我们寻遍整个世界, 发现佛法可以让我们的心得到安乐.
     - [ ] 入佛门
     - [ ] 如何做功课
     - [ ] 关于前行的简短开示
     - [ ] 开吾
     - [ ] 善护口业
   - 走出修行的误区 [/]
 追求觉悟的过程，就像在意个无边无际的迷宫里突围，没有佛法的指引，
 我们永远都将被困在里面，原地打转
    - [ ]

     

** 《股市趋势技术分析》  -  Edvards & Magee.  
   - 第一部分 技术分析理论.
     1) 交易和投资的技术分析方法 / 2
     2) 图像 / 7
     3) 道氏理论 / 11
     4) 道氏理论的实际应用 / 21
     5) 道氏理论的缺陷 / 35
	5.1) 20 和 21 世纪的道氏理论 / 39
     6) 重要的反转模式 / 47
     7) 重要的反转模式： 续篇 / 62
     8) 重要的反转模式： 三角模式 / 82
     9) 重要的反转模式： 续篇 / 109
     10) 其他反转现象 /128
	 10.1) 潜在重要的短期现象 / 153
     11) 巩固形态 / 160
     12) 缺口  / 179
     13) 支撑和阻力 / 197
     14) 趋势线和通道 / 216
     15) 主要趋势线 / 238
	 15.1)  21 世纪的指数交易 / 251
     16) 商品齐活图像的技术分析 / 261
	 16.1)  商品齐活图像的技术分析: 一种 21 世纪的观点 / 261
     17) 总结和结论 / 271
	 17.1)  21世纪的技术分析和技术: 电脑和互联网, 投资工具的信息革命. / 276
	 17.2)  投资技术的进步 / 283
	
   - 第二部分 交易技略.
     18) 技略问题 / 306
	18.1) 长线投资者的策略和技略.
     
